
Change log/Release notes
=========================

V 2.5.5
=======
* use correct sequence number for acknowledge packets and only increase if correct sequence number was received inside cmd_usip and call_hboot

romloader_uart:
* retry receiving certain packets after a CRC error 

V 2.5.4
=======
romloader_jtag:
* Add support for the SEGGER J-Link adapter with VID 0x1366/PID 0x1020.

* netX 90: disable interrupts (cpsid instruction)

* Updated the error message that is shown if, while connecting to the 
  netx 90 via JTAG, the chip type cannot be detected:
  Error: Could not detect the chip type.
  The debug access port might be disabled.

romloader_uart:
* Stabilize UART communication. Retry knock knock if first knock knock failed. 

* netX 90 Rev.1/2 with romloader_uart: 
  Store the console mode (open, secure, unknown) during plugin:Connect()
  and add the function get_console_mode to retrieve the mode from Lua.

* netX 90 Rev.1/2 with romloader_uart: 
  Allow switching from a terminal console to a machine interface:

  detect secure mode
  if open, detect the chip type using dump commands
  if secure, check if the dump command works.
  If it does, detect the chip type using dump commands
  If it does not, send the VERS command.
  If the output is 05/0d, assume that the chip type is netx 90 Rev.2.

  If the netX 90 Rev.1/2 is detected and it is is in a text console mode,
  execute a boot image that jumps to the machine interface.
  If the netX is in secure boot mode, this image must be signed.

  Returns an error if execution of the image fails for some reason.
  "start_mi image has been rejected or execution has failed."

  Accept an MI sync packet with MI version 3.x
      
  The binary contents of this boot image can be passed to romloader_uart 
  using the option list that is passed to DetectInterfaces:
  atPluginOptions = {
    romloader_uart = {
      netx90_m2m_image = <binary contents of boot image>
    }
  }

* netX 90 Rev.1/2: Add a boot image that starts the machine interface.
  The boot image detects the chip type and starts the machine interface 
  by jumping to the respective address of mi_loop.

* The start_mi boot image for the netX 90 disables the pull-down resistors 
  of the UART RXD/TXD pins.

Romloader API:
* Add new command methods for call_hboot and usip command.

* Add a flag to call_hboot() to return after sending the command to start the 
  boot image without waiting for the boot image to execute and complete.

* Add the function call_no_answer(), a variant of the call() function that 
  returns after sending the call command without waiting for the called 
  program to execute and complete.

* Add functions to obtain the MI version from the Lua script.

Misc:
* Updated libusb version to 1.0.26

* Allow building the romloader under Windows 10/64 bit 

* various changes to build system. Add CI builds on github.

* Bugfix: Allow connecting to netx 90 Rev.2 in secure boot mode via ethernet 
  if the ethernet machine interface is active.

* Bugfix: Fix a bug causing memory corruption when exiting the application
  when romloader_uart was loaded (since 2.5.4-dev1).
  Note: this bug may not be entirely fixed.

V 2.5.3
=======
* Fix a bug that may lead to a crash when connecting to the netX 90 Rev2
  via UART or ethernet (NXTFLASHER-534).

V 2.5.2
=======
* netX 90/JTAG: disable all IRQs if CPU is halted in undefined state 
  (that is, when attach mode is selected or when the CPU does not halt 
  in the breakpoint as expected after reset.)

* Changed wording of some messages during chip type detection
  more uniform messages
  mention when chip type is potentially incorrect
  mention open/secure boot mode

* UART machine interface:
  During the connection setup, when the netx is repeatedly sending a packet
  because it is waiting for an ack packet, send a cancel_operation request.

* Add new chip types: 
  netX 90 Rev1 with PHY v3 (Step C)
  netX 90 Rev2 (Step D)

* Extend detection pattern for netX 90 Rev1 to discriminate from Rev2
  Note: netX 90 Rev1 with PHY v3 will not be detected by detect_chiptyp

* When the netX uses machine interface v3.1 (starting from netX 90 Rev2), 
  use the new info command to detect the chip type.

* netX 90: When secure boot mode is detected, exit with an error.

* netx 90 Rev1 and Rev2: When the netx is in the UART terminal console,
  send a reset command which allows us to enter the machine interface.
  (Previously, a manual reset was required).

V 2.5.1 
=======
* Added functions for test purposes.

V 2.5.0
=======
Changes to the machine interface protocol (UART/USB/Ethernet):

* Bug fixes:
  Send ack with the received packet's sequence number (ucPacketSequenceNumber)
  Only increment global sequence number (m_ucMonitorSequence) when when the received packet's sequence number matches the global sequence number.
  
* Tolerate dropped ACK packets:
  When execute_command() is waiting for an ACK from the netX, but instead a 
  different packet is received whose sequence number is ahead by one,
  we assume that the ACK was sent by the netX but got lost on the way.
  The received packet is kept and processed. This is done by setting a flag 
  that causes the next call to receive_packet() to be skipped.

Changes to romloader_jtag:

* Update to OpenOCD 0.11.0 and libusb v1.0.24 
* Pass the jtag options (JTAG frequency, reset mode) that are passed to
  DetectInterfaces through to the plugin instance and to the TCL script. 
* New reset script for netx 90:
  Removed the breakpoint at 0x170
	Abort with an error if the CPU cannot be halted.
* Remove the permanent breakpoint used to catch return from call. 
  The BP is now enabled before any call and disabled afterwards.
* Initialize the netIOL PLL
* Print all messages from the JTAG plugin to the log.
* Messages passed from the netX to the Lua script that had CR LF LF as line 
  endings now have CR LF.
  Some trace messages from OpenOCD that used to have single line breaks now 
	have double line breaks.

Other changes:

* Replace the netX4000 RELAXED with the netX4000 FULL
* Build the GPIO drivers on ARM platforms.


V 2.4.9
=======

Changes affecting openOCD and JTAG configurations:

* Update the openOCD library to v0.10.0.7: J-Link support and some speed increase.
* Enable support for the Segger J-Link JTAG adapter.
* Add Support for the NXEB 90-SPE board.
* Change the interface name of the NXHX90-DRIVE to NXHX90-MC.
* Fix a spike on the reset line that occurred on the nSRST line on FTDI-based 
  JTAG adapters when a reset was triggered.
  This change affects the following boards:
  NXHX 90-JTAG, NXHX 90-MC, NXHX 90-SPE, NRPEB H90-RE
  and the following adapters:
  NXJTAG-USB and NXJTAG-4000-USB

V 2.4.8
=======

* Add the onboard USB-JTAG interface of the NXHX 90-DRIVE board (VID 0x1939 PID 0x0031).

V 2.4.7
=======

* Romloader_test assumes that all messages up to 2048 bytes are transmitted 
  in full, not split into multiple messages.
* Romloader_test includes the chip type and plugin/interface name in the test 
  result. 
* Define max. frequencies for the JTAG adapter and the CPU, and set the adapter 
  speed to the minimum of the two at the end of chip init. 
  Generally, the JTAG speed (adapter_khz) is set to 6 MHz. 
  When the netIOL is accessed, it is set to 1 MHz. 
  When the onboard JTAG port of the NXHX boards with the FT2232D or the 
  Amontec JTAGkey mini is used, it is set to 2 MHz.
  
V 2.4.6
=======

* JTAG: Set the adapter speed to 6 MHz at the end of chip_init; 1 MHz for netIOL.
* Romloader test: Catch errors during the test (wrap in xpcall) and print OK/Error at the end.

V 2.4.5
=======

* Fix DCC messaging on netx 90.
* Fix chip type detection of netx 10.
* Improved reset handling on netx 90, when SRST is not present/not connected.
  If _USE_SOFT_RESET_ in jtag_detect_init.tcl is false (default), use SRST (hardware reset).
  If _USE_SOFT_RESET_ is true, use sysresetreq (via JTAG).
* Build DCC output code for netx 4000 (preliminary).
* Romloader Test:
  Move montest binary for netx 4000 to 0x04004000 to prevent overwriting UART monitor.  

V 2.4.4
=======

* Add FTDI-JTAG interface "NRPEB H90-RE".

V 2.4.3
========

* Merge v2.4.1 and v2.4.2.

V 2.4.2
========

* Fix the chip type detection on the netX 90 MPW, Rev. 0 and Rev. 1 when
  using the serial or ethernet console mode.

V 2.4.1
========

* Support JTAG on the netIOL MPW.
* Fix structure packing (caused errors in Windows builds)
* Change the name string for the netX90 Rev. 0 from "netX90" to "netX90 Rev0".
