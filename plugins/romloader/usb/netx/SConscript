# -*- coding: utf-8 -*-
#-------------------------------------------------------------------------#
#   Copyright (C) 2011 by Christoph Thelen                                #
#   doc_bacardi@users.sourceforge.net                                     #
#                                                                         #
#   This program is free software; you can redistribute it and/or modify  #
#   it under the terms of the GNU General Public License as published by  #
#   the Free Software Foundation; either version 2 of the License, or     #
#   (at your option) any later version.                                   #
#                                                                         #
#   This program is distributed in the hope that it will be useful,       #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of        #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #
#   GNU General Public License for more details.                          #
#                                                                         #
#   You should have received a copy of the GNU General Public License     #
#   along with this program; if not, write to the                         #
#   Free Software Foundation, Inc.,                                       #
#   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #
#-------------------------------------------------------------------------#


#----------------------------------------------------------------------------
#
# Import the default compiler environments and the platform libraries.
#
Import('atEnv')
Import('libmi_netx500', 'libmi_netx56', 'libmi_netx50', 'libmi_netx10')
import os.path


#----------------------------------------------------------------------------
# This is the list of sources. The elements must be separated with whitespace
# (i.e. spaces, tabs, newlines). The amount of whitespace does not matter.
sources_common = """
	src/header.S
	src/init_netx_test.S
	src/main.c
"""


sources_custom_netx500 = """
	src/usb_emsys/transport.c
	src/usb_emsys/usb.c
	src/usb_emsys/usb_descriptors.c
	src/usb_emsys/usb_globals.c
	src/usb_emsys/usb_io.c
	src/usb_emsys/usb_main.c
	src/usb_emsys/usb_requests_top.c
"""


sources_custom_netx10 = """
	src/options.c
	src/usb_hsoc_v1/transport.c
"""


sources_custom_netx56 = """
	src/options.c
	src/usb_hsoc_v2/transport.c
"""

strTargetPath = Dir('#targets/plugins/romloader/usb/netx').get_path()


#----------------------------------------------------------------------------
#
# Build the netX500 files.
#
env_netx500 = atEnv.NETX500.Clone()
env_netx500.Append(CPPPATH = ['src', 'src/usb_emsys', '../../machine_interface/netx/src', '#platform/src', '#platform/src/lib'])
env_netx500.Replace(LDFILE = File('src/netx500/netx500.ld'))
src_netx500 = env_netx500.SetBuildPath(os.path.join(strTargetPath, 'netx500'), 'src', sources_common + sources_custom_netx500)
elf_netx500 = env_netx500.Elf(os.path.join(strTargetPath, 'usbmon_netx500.elf'), src_netx500 + env_netx500['PLATFORM_LIBRARY'] + libmi_netx500)
bin_netx500 = env_netx500.ObjCopy(os.path.join(strTargetPath, 'usbmon_netx500.bin'), elf_netx500)
USBMON_NETX500 = env_netx500.DataArray(os.path.join(strTargetPath, 'usbmon_netx500.c'), bin_netx500, DATAARRAY_NAME='auc_usbmon_netx500')
Export('USBMON_NETX500')

#----------------------------------------------------------------------------
#
# Build the netX56 files.
#
env_netx56 = atEnv.NETX56.Clone()
env_netx56.Append(CPPPATH = ['src', 'src/usb_hsoc_v2', '../../machine_interface/netx/src', '#platform/src', '#platform/src/lib'])
env_netx56.Replace(LDFILE = File('src/netx56/netx56.ld'))
src_netx56 = env_netx56.SetBuildPath(os.path.join(strTargetPath, 'netx56'), 'src', sources_common + sources_custom_netx56)
elf_netx56 = env_netx56.Elf(os.path.join(strTargetPath, 'usbmon_netx56.elf'), src_netx56 + env_netx56['PLATFORM_LIBRARY'] + libmi_netx56)
bin_netx56 = env_netx56.ObjCopy(os.path.join(strTargetPath, 'usbmon_netx56.bin'), elf_netx56)
USBMON_NETX56 = env_netx56.DataArray(os.path.join(strTargetPath, 'usbmon_netx56.c'), bin_netx56, DATAARRAY_NAME='auc_usbmon_netx56')
Export('USBMON_NETX56')

#----------------------------------------------------------------------------
#
# Build the netX10 files.
#
env_netx10 = atEnv.NETX10.Clone()
env_netx10.Append(CPPPATH = ['src', 'src/usb_hsoc_v1', '../../machine_interface/netx/src', '#platform/src', '#platform/src/lib'])
env_netx10.Replace(LDFILE = File('src/netx10/netx10.ld'))
src_netx10 = env_netx10.SetBuildPath(os.path.join(strTargetPath, 'netx10'), 'src', sources_common + sources_custom_netx10)
elf_netx10 = env_netx10.Elf(os.path.join(strTargetPath, 'usbmon_netx10.elf'), src_netx10 + env_netx10['PLATFORM_LIBRARY'] + libmi_netx10)
bin_netx10 = env_netx10.ObjCopy(os.path.join(strTargetPath, 'usbmon_netx10.bin'), elf_netx10)
USBMON_NETX10 = env_netx10.DataArray(os.path.join(strTargetPath, 'usbmon_netx10.c'), bin_netx10, DATAARRAY_NAME='auc_usbmon_netx10')
Export('USBMON_NETX10')
